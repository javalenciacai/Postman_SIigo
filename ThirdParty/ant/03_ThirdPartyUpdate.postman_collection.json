{
	"info": {
		"_postman_id": "0875426c-ffaf-43a0-a6df-0809a1c15e4f",
		"name": "03_ThirdPartyUpdate",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01_auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aed1b308-d223-4ead-b0c0-f6a5cb4c9e33",
						"exec": [
							"bodyData = JSON.parse(responseBody)",
							"",
							"token_value = bodyData.access_token",
							"console.log(token_value)",
							"",
							"pm.environment.set(\"token\", token_value);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic U2lpZ29XZWI6QUJBMDhCNkEtQjU2Qy00MEE1LTkwQ0YtN0MxRTU0ODkxQjYx",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "password",
							"value": "1111",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "WebApi offline_access",
							"type": "text"
						},
						{
							"key": "username",
							"value": "admin@crazyempresa.com",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://23.101.145.208:50000/connect/token",
					"protocol": "http",
					"host": [
						"23",
						"101",
						"145",
						"208"
					],
					"port": "50000",
					"path": [
						"connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "02_create_all_fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d8f3b1a9-4f54-4ff3-b3d5-292a04d2d02e",
						"exec": [
							"var jsonData = pm.response.json();",
							"guid_value = jsonData.accountDto.guid;",
							"",
							"pm.environment.set(\"guid\", guid_value);",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    console.log(\"Response time - Create Request: \"+pm.response.responseTime);",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"/*Mandatory fields*/",
							"",
							"pm.test(\"Verify third party first name\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.firstName).to.eql(pm.variables.get(\"firstName\"));",
							"});",
							"",
							"pm.test(\"Verify third party lastname\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.lastName).to.eql(pm.variables.get(\"lastName\"));",
							"});",
							"",
							"pm.test(\"Verify third party fullname\", function () {",
							"    let name = jsonData.accountDto.basicData.firstName;",
							"    let lastname = jsonData.accountDto.basicData.lastName; ",
							"    let fullName = name + \" \" + lastname;",
							"    pm.expect(jsonData.accountDto.basicData.fullName).to.eql(fullName);",
							"});",
							"",
							"pm.test(\"Verify third party identification\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.identification).to.eql(String(pm.variables.get(\"identification\")));",
							"});",
							"",
							"pm.test(\"Verify third party address\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.address).to.eql(pm.variables.get(\"address\"));",
							"});",
							"",
							"pm.test(\"Verify third party city\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.city).to.eql(pm.variables.get(\"city\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact email\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].email).to.eql(pm.variables.get(\"contactsemail\"));",
							"});",
							"",
							"/*Other fields*/",
							"",
							"pm.test(\"Verify third party isCustomer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isCustomer)).to.eql(pm.variables.get(\"isCustomer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isDealer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isDealer)).to.eql(pm.variables.get(\"isDealer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isLeaflet\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isLeaflet)).to.eql(pm.variables.get(\"isLeaflet\"));",
							"});",
							"",
							"pm.test(\"Verify third party isSupplier\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isSupplier)).to.eql(pm.variables.get(\"isSupplier\"));",
							"});",
							"",
							"pm.test(\"Verify third party isSocialReason\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isSocialReason)).to.eql(pm.variables.get(\"isSocialReason\"));",
							"});",
							"",
							"pm.test(\"Verify third party isBank\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isBank)).to.eql(pm.variables.get(\"isBank\"));",
							"});",
							"",
							"pm.test(\"Verify third party taxClassificationCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.taxClassificationCode).to.eql(pm.variables.get(\"taxClassificationCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party check digit\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.checkDigit).to.eql(pm.variables.get(\"checkDigit\"));",
							"});",
							"",
							"pm.test(\"Verify third party branchOffice\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.branchOffice).to.eql(pm.variables.get(\"branchOffice\"));",
							"});",
							"",
							"pm.test(\"Verify third party companyName\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.companyName).to.eql(pm.variables.get(\"companyName\"));",
							"});",
							"",
							"pm.test(\"Verify third party webSite\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.webSite).to.eql(pm.variables.get(\"webSite\"));",
							"});",
							"",
							"pm.test(\"Verify third party accountParentCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.accountParentCode).to.eql(pm.variables.get(\"accountParentCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party usersCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.usersCode).to.eql(pm.variables.get(\"usersCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party taxPersonTypeCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.taxPersonTypeCode).to.eql(pm.variables.get(\"taxPersonTypeCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party businessActivityCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.businessActivityCode).to.eql(String(pm.variables.get(\"businessActivityCode\")));",
							"});",
							"",
							"pm.test(\"Verify third party isAgentRetainer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isAgentRetainer)).to.eql(pm.variables.get(\"isAgentRetainer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isAgentAutoretainer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isAgentAutoretainer)).to.eql(pm.variables.get(\"isAgentAutoretainer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isDeclarant\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isDeclarant)).to.eql(pm.variables.get(\"isDeclarant\"));",
							"});",
							"",
							"pm.test(\"Verify third party isLocked\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isLocked)).to.eql(pm.variables.get(\"isLocked\"));",
							"});",
							"",
							"/*fax*/",
							"",
							"pm.test(\"Verify third party fax indicative\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.indicative).to.eql(String(pm.variables.get(\"faxindicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party fax number\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.number).to.eql(String(pm.variables.get(\"faxnumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party fax extention\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.extention).to.eql(String(pm.variables.get(\"faxextention\")));",
							"});",
							"",
							"",
							"/*phone*/",
							"",
							"pm.test(\"Verify third party phone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].indicative).to.eql(String(pm.variables.get(\"phoneindicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party phone number\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].number).to.eql(String(pm.variables.get(\"phonenumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party phone extention\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].extention).to.eql(String(pm.variables.get(\"phoneextention\")));",
							"});",
							"",
							"/*Contact*/",
							"",
							"pm.test(\"Verify third party contact firstName\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].firstName).to.eql(pm.variables.get(\"contactsfirstName\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact lastName\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].lastName).to.eql(pm.variables.get(\"contactslastName\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].indicative).to.eql(String(pm.variables.get(\"contactsofficePhoneIndicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone number\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].number).to.eql(String(pm.variables.get(\"contactsofficePhoneNumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone extention\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].extention).to.eql(String(pm.variables.get(\"contactsofficePhoneExtention\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].indicative).to.eql(String(pm.variables.get(\"contactscellPhoneIndicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone number\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].number).to.eql(String(pm.variables.get(\"contactscellPhoneNumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone extention\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].extention).to.eql(String(pm.variables.get(\"contactscellPhoneExtention\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact isPrincipal\", function () {",
							"    pm.expect(String(jsonData.accountDto.contacts[0].isPrincipal)).to.eql(pm.variables.get(\"contactsisPrincipal\"));",
							"});",
							"",
							"/*status*/",
							"pm.test(\"Verify third party status\", function () {",
							"    pm.expect(String(jsonData.accountDto.status.isActive)).to.eql(pm.variables.get(\"statusisActive\"));",
							"});",
							"",
							"/*principalLocation*/",
							"pm.test(\"Verify third party principal location\", function () {",
							"    pm.expect(jsonData.accountDto.principalLocation.email).to.eql(pm.variables.get(\"principalLocationemail\"));",
							"});",
							"",
							"/*segmentation*/",
							"",
							"pm.test(\"Verify third party segmentation account ratingCode\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.accountRatingCode).to.eql(pm.variables.get(\"segmentationaccountRatingCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation size code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.sizeCode).to.eql(pm.variables.get(\"segmentationsizeCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation sub economic sector code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.subEconomicSectorCode).to.eql(pm.variables.get(\"segmentationsubEconomicSectorCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation annual sale code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.annualSaleCode).to.eql(pm.variables.get(\"segmentationannualSaleCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation employee number code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.employeeNumberCode).to.eql(pm.variables.get(\"segmentationemployeeNumberCode\"));",
							"});",
							"",
							"",
							"/*relatedUsers*/",
							"",
							"pm.test(\"Verify third party related users directorId\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.directorId).to.eql(pm.variables.get(\"relatedUsersdirectorId\"));",
							"});",
							"",
							"pm.test(\"Verify third party related users salesmanId\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.salesmanId).to.eql(pm.variables.get(\"relatedUserssalesmanId\"));",
							"});",
							"",
							"pm.test(\"Verify third party related users distributorCode\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.distributorCode).to.eql(pm.variables.get(\"relatedUsersdistributorCode\"));",
							"});",
							"",
							"",
							"/*AccountDto*/",
							"",
							"pm.test(\"Verify third party collectorId\", function () {",
							"    pm.expect(jsonData.accountDto.collectorId).to.eql(pm.variables.get(\"collectorId\"));",
							"});",
							"",
							"pm.test(\"Verify third party comments\", function () {",
							"    pm.expect(jsonData.accountDto.comments).to.eql(pm.variables.get(\"comments\"));",
							"});",
							"",
							"pm.test(\"Verify third party postalCode\", function () {",
							"    pm.expect(jsonData.accountDto.postalCode).to.eql(String(pm.variables.get(\"postalCode\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountState\", function () {",
							"    pm.expect(jsonData.accountDto.accountState).to.eql(pm.variables.get(\"accountState\"));",
							"});",
							"",
							"pm.test(\"Verify third party foreignIdentification\", function () {",
							"    pm.expect(jsonData.accountDto.foreignIdentification).to.eql(String(pm.variables.get(\"foreignIdentification\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountTypes\", function () {",
							"    pm.expect(jsonData.accountDto.accountTypes).to.eql(String(pm.variables.get(\"accountTypes\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountSubStateCode\", function () {",
							"    pm.expect(String(jsonData.accountDto.accountSubStateCode)).to.eql(pm.variables.get(\"accountSubStateCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party erpContactCode\", function () {",
							"    pm.expect(String(jsonData.accountDto.erpContactCode)).to.eql(pm.variables.get(\"erpContactCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party commercialActivity\", function () {",
							"    pm.expect(jsonData.accountDto.commercialActivity).to.eql(pm.variables.get(\"commercialActivity\"));",
							"});",
							"",
							"pm.test(\"Verify third party moneyCode\", function () {",
							"    pm.expect(jsonData.accountDto.moneyCode).to.eql(String(pm.variables.get(\"moneyCode\")));",
							"});",
							"",
							"pm.test(\"Verify third party eInvoiceReceiveType\", function () {",
							"    pm.expect(jsonData.accountDto.eInvoiceReceiveType).to.eql(pm.variables.get(\"eInvoiceReceiveType\"));",
							"});",
							"",
							"pm.test(\"Verify third party vatCompanyType\", function () {",
							"    pm.expect(jsonData.accountDto.vatCompanyType).to.eql(pm.variables.get(\"vatCompanyType\"));",
							"});",
							"",
							"pm.test(\"Verify third party acceptElectronicInvoice\", function () {",
							"    pm.expect(String(jsonData.accountDto.acceptElectronicInvoice)).to.eql(pm.variables.get(\"acceptElectronicInvoice\"));",
							"});",
							"",
							"pm.test(\"Verify third party billingOnlineState\", function () {",
							"    pm.expect(jsonData.accountDto.billingOnlineState).to.eql(pm.variables.get(\"billingOnlineState\"));",
							"});",
							"",
							"//pm.test(\"Verify third party taxConfig\", function () {",
							"//    pm.expect(jsonData.accountDto.taxConfig).to.eql(pm.variables.get(\"taxConfig\"));",
							"//});",
							"",
							"//pm.test(\"Verify third party isActive\", function () {",
							"//    pm.expect(jsonData.accountDto.isActive).to.eql(pm.variables.get(\"isActive\"));",
							"//});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0e10c1e3-a994-40b0-ad8b-4036d81b7870",
						"exec": [
							"console.log(pm.environment.get(\"firstNameModified\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "text/plain"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"accountDto\": {\r\n        \"basicData\": {\r\n            \"isCustomer\": {{isCustomer}},\r\n            \"isDealer\": {{isDealer}},\r\n            \"isLeaflet\": {{isLeaflet}},\r\n            \"isSupplier\": {{isSupplier}},\r\n            \"isSocialReason\": {{isSocialReason}},\r\n            \"isBank\": {{isBank}},\r\n            \"firstName\": \"{{firstName}}\",\r\n            \"lastName\": \"{{lastName}}\",\r\n            \"fullName\": \"{{fullName}}\",\r\n            \"idTypeCode\": {{idTypeCode}},\r\n            \"identification\": \"{{identification}}\",\r\n            \"checkDigit\": {{checkDigit}},\r\n            \"branchOffice\": {{branchOffice}},\r\n            \"taxClassificationCode\": {{taxClassificationCode}},\r\n            \"companyName\": \"{{companyName}}\",\r\n            \"webSite\": \"{{webSite}}\",\r\n            \"accountParentCode\": {{accountParentCode}},\r\n            \"address\": \"{{address}}\",\r\n            \"usersCode\": {{usersCode}},\r\n            \"city\": {{city}},\r\n            \"taxPersonTypeCode\": {{taxPersonTypeCode}},\r\n            \"businessActivityCode\": \"{{businessActivityCode}}\",\r\n            \"isAgentRetainer\": {{isAgentRetainer}},\r\n            \"isAgentAutoretainer\": {{isAgentAutoretainer}},\r\n            \"isDeclarant\": {{isDeclarant}},\r\n            \"isLocked\": {{isLocked}},\r\n            \"fax\": {\r\n                \"indicative\": \"{{faxindicative}}\",\r\n                \"number\": \"{{faxnumber}}\",\r\n                \"extention\": \"{{faxextention}}\"\r\n            },\r\n            \"phone\": [\r\n                {\r\n                    \"indicative\": \"{{phoneindicative}}\",\r\n                    \"number\": \"{{phonenumber}}\",\r\n                    \"extention\": \"{{phoneextention}}\"\r\n                }\r\n            ]\r\n        },\r\n        \"status\": {\r\n            \"isActive\": {{statusisActive}}\r\n        },\r\n        \"principalLocation\": {\r\n            \"email\": \"{{principalLocationemail}}\"\r\n        },\r\n        \"contacts\": [\r\n            {\r\n                \"firstName\": \"{{contactsfirstName}}\",\r\n                \"lastName\": \"{{contactslastName}}\",\r\n                \"officePhone\": [{\r\n                    \"indicative\": \"{{contactsofficePhoneIndicative}}\",\r\n                    \"number\": \"{{contactsofficePhoneNumber}}\",\r\n                    \"extention\": \"{{contactsofficePhoneExtention}}\"\r\n                }],\r\n                \"cellPhone\": [{\r\n                    \"indicative\": \"{{contactscellPhoneIndicative}}\",\r\n                    \"number\": \"{{contactscellPhoneNumber}}\",\r\n                    \"extention\": \"{{contactscellPhoneExtention}}\"\r\n                }],\r\n                \"email\": \"{{contactsemail}}\",\r\n                \"isPrincipal\": {{contactsisPrincipal}}\r\n            }\r\n        ],\r\n        \"segmentation\": {\r\n            \"accountRatingCode\": {{segmentationaccountRatingCode}},\r\n            \"sizeCode\": {{segmentationsizeCode}},\r\n            \"subEconomicSectorCode\": {{segmentationsubEconomicSectorCode}},\r\n            \"annualSaleCode\": {{segmentationannualSaleCode}},\r\n            \"employeeNumberCode\": {{segmentationemployeeNumberCode}}\r\n        },\r\n        \"relatedUsers\": {\r\n            \"directorId\": {{relatedUsersdirectorId}},\r\n            \"salesmanId\": {{relatedUserssalesmanId}},\r\n            \"distributorCode\": {{relatedUsersdistributorCode}}\r\n        },\r\n        \"collectorId\": {{collectorId}},\r\n        \"comments\": \"{{comments}}\",\r\n        \"postalCode\": \"{{postalCode}}\",\r\n        \"picture\": null,\r\n        \"fiscalResponsibilityCode\": \"{}\",\r\n        \"accountState\": {{accountState}},\r\n        \"foreignIdentification\": \"{{foreignIdentification}}\",\r\n        \"accountTypes\": \"{{accountTypes}}\",\r\n        \"accountSubStateCode\": {{accountSubStateCode}},\r\n        \"erpContactCode\": {{erpContactCode}},\r\n        \"commercialActivity\": {{commercialActivity}},\r\n        \"moneyCode\": \"{{moneyCode}}\",\r\n        \"eInvoiceReceiveType\": {{eInvoiceReceiveType}},\r\n        \"vatCompanyType\": {{vatCompanyType}},\r\n        \"acceptElectronicInvoice\": {{acceptElectronicInvoice}},\r\n        \"billingOnlineState\": {{billingOnlineState}},\r\n        \"freeFields\": [\r\n            {\r\n                \"name\": \"string\",\r\n                \"value\": \"string\"\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:5000/api/third-party/account",
					"host": [
						"{{url}}"
					],
					"port": "5000",
					"path": [
						"api",
						"third-party",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "03_find",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "407a8352-7721-49d1-b80b-5a5a9071bb59",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 400ms\", function () {",
							"    console.log(\"Response time - Find request: \"+pm.response.responseTime);",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Verify third party first name\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.firstName).to.eql(pm.variables.get(\"firstName\"));",
							"});",
							"",
							"pm.test(\"Verify third party lastname\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.lastName).to.eql(pm.variables.get(\"lastName\"));",
							"});",
							"",
							"pm.test(\"Verify third party fullname\", function () {",
							"    let name = jsonData.accountDto.basicData.firstName;",
							"    let lastname = jsonData.accountDto.basicData.lastName; ",
							"    let fullName = name + \" \" + lastname;",
							"    pm.expect(jsonData.accountDto.basicData.fullName).to.eql(fullName);",
							"});",
							"",
							"pm.test(\"Verify third party identification\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.identification).to.eql(String(pm.variables.get(\"identification\")));",
							"});",
							"",
							"pm.test(\"Verify third party address\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.address).to.eql(pm.variables.get(\"address\"));",
							"});",
							"",
							"pm.test(\"Verify third party city\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.city).to.eql(pm.variables.get(\"city\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact email\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].email).to.eql(pm.variables.get(\"contactsemail\"));",
							"});",
							"",
							"string_body = JSON.stringify(jsonData);",
							"pm.environment.set(\"findResponseBody\",string_body);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "585ecf71-82b0-4b8e-ba12-24c0ea50f8d2",
						"exec": [
							"console.log(pm.environment.get(\"firstNameModified\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "text/plain"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:5000/api/third-party/account/{{guid}}",
					"host": [
						"{{url}}"
					],
					"port": "5000",
					"path": [
						"api",
						"third-party",
						"account",
						"{{guid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "04_update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "39ca0f79-0283-4a7d-b187-1d18de95002a",
						"exec": [
							"var responseBody = JSON.parse(pm.environment.get(\"findResponseBody\"));",
							"console.log(\"Update mandatory fields\");",
							"console.log(pm.environment.get(\"firstNameModified\"));",
							"",
							"/*Datos obligatorios se actualizan. Esta sección se podrá remover con la implementación ",
							"de lectura CSV de las variables de entorno fijadas a continuación: */",
							"",
							"pm.environment.set(\"firstNameModified\", \"Modificada\");",
							"console.log(pm.environment.get(\"firstNameModified\"));",
							"pm.environment.set(\"lastNameModified\", \"Modificada\");",
							"pm.environment.set(\"addressModified\", \"Modificada\");",
							"pm.environment.set(\"identificationModified\", \"22222\");",
							"pm.environment.set(\"contactsemailModified\", \"modificada@update.com\");",
							"pm.environment.set(\"cityModified\", 19004);",
							"pm.environment.set(\"phoneindicativeModified\", \"22\");",
							"pm.environment.set(\"phonenumberModified\", \"22\");",
							"pm.environment.set(\"phoneextentionModified\", \"22\");",
							"",
							"responseBody.accountDto.basicData.firstName = String(pm.environment.get(\"firstNameModified\"));",
							"responseBody.accountDto.basicData.lastName = String(pm.environment.get(\"lastNameModified\"));",
							"responseBody.accountDto.basicData.address = String(pm.environment.get(\"addressModified\"));",
							"responseBody.accountDto.basicData.identification = String(pm.environment.get(\"identificationModified\"));",
							"responseBody.accountDto.contacts[0].email = String(pm.environment.get(\"contactsemailModified\"));",
							"responseBody.accountDto.basicData.city = parseInt(pm.environment.get(\"cityModified\"));",
							"",
							"responseBody.accountDto.basicData.phone[0].indicative = String(pm.environment.get(\"phoneindicativeModified\"));",
							"responseBody.accountDto.basicData.phone[0].number = String(pm.environment.get(\"phonenumberModified\"));",
							"responseBody.accountDto.basicData.phone[0].extention = String(pm.environment.get(\"phoneextentionModified\"));",
							"",
							"pm.environment.set(\"findResponseBody\", JSON.stringify(responseBody));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "435989da-8c88-4ca0-be26-5e5e19284614",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    console.log(\"Response time - Create Request: \"+pm.response.responseTime);",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "text/plain",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{findResponseBody}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:5000/api/third-party/account/",
					"host": [
						"{{url}}"
					],
					"port": "5000",
					"path": [
						"api",
						"third-party",
						"account",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "05_find_update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "407a8352-7721-49d1-b80b-5a5a9071bb59",
						"exec": [
							"var jsonData = pm.response.json();",
							"console.log(\"Find - Update mandatory fields\");",
							"console.log(pm.variables.get(\"firstNameModified\"));",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    console.log(\"Response time - Create Request: \"+pm.response.responseTime);",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"/*Mandatory fields*/",
							"",
							"pm.test(\"Verify third party first name\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.firstName).to.eql(pm.variables.get(\"firstNameModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party lastname\", function () {",
							"    console.log(jsonData.accountDto.basicData.lastName);",
							"    console.log(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.accountDto.basicData.lastName).to.eql(pm.variables.get(\"lastNameModified\"));",
							"});",
							"",
							"//pm.test(\"Verify third party fullname\", function () {",
							"//    let name = jsonData.accountDto.basicData.firstName;",
							"//    let lastname = jsonData.accountDto.basicData.lastName; ",
							"//    let fullName = name + \" \" + lastname;",
							"//    pm.expect(jsonData.accountDto.basicData.fullName).to.eql(fullName);",
							"//});",
							"",
							"pm.test(\"Verify third party identification\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.identification).to.eql(pm.variables.get(\"identificationModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party address\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.address).to.eql(pm.variables.get(\"addressModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party city\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.city).to.eql(parseInt(pm.variables.get(\"cityModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact email\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].email).to.eql(pm.variables.get(\"contactsemailModified\"));",
							"});",
							"",
							"/*Other fields*/",
							"",
							"pm.test(\"Verify third party isCustomer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isCustomer)).to.eql(pm.variables.get(\"isCustomer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isDealer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isDealer)).to.eql(pm.variables.get(\"isDealer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isLeaflet\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isLeaflet)).to.eql(pm.variables.get(\"isLeaflet\"));",
							"});",
							"",
							"pm.test(\"Verify third party isSupplier\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isSupplier)).to.eql(pm.variables.get(\"isSupplier\"));",
							"});",
							"",
							"pm.test(\"Verify third party isSocialReason\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isSocialReason)).to.eql(pm.variables.get(\"isSocialReason\"));",
							"});",
							"",
							"pm.test(\"Verify third party isBank\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isBank)).to.eql(pm.variables.get(\"isBank\"));",
							"});",
							"",
							"pm.test(\"Verify third party taxClassificationCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.taxClassificationCode).to.eql(pm.variables.get(\"taxClassificationCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party check digit\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.checkDigit).to.eql(pm.variables.get(\"checkDigit\"));",
							"});",
							"",
							"pm.test(\"Verify third party branchOffice\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.branchOffice).to.eql(pm.variables.get(\"branchOffice\"));",
							"});",
							"",
							"pm.test(\"Verify third party companyName\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.companyName).to.eql(pm.variables.get(\"companyName\"));",
							"});",
							"",
							"pm.test(\"Verify third party webSite\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.webSite).to.eql(pm.variables.get(\"webSite\"));",
							"});",
							"",
							"pm.test(\"Verify third party accountParentCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.accountParentCode).to.eql(pm.variables.get(\"accountParentCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party usersCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.usersCode).to.eql(pm.variables.get(\"usersCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party taxPersonTypeCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.taxPersonTypeCode).to.eql(pm.variables.get(\"taxPersonTypeCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party businessActivityCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.businessActivityCode).to.eql(String(pm.variables.get(\"businessActivityCode\")));",
							"});",
							"",
							"pm.test(\"Verify third party isAgentRetainer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isAgentRetainer)).to.eql(pm.variables.get(\"isAgentRetainer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isAgentAutoretainer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isAgentAutoretainer)).to.eql(pm.variables.get(\"isAgentAutoretainer\"));",
							"});",
							"",
							"pm.test(\"Verify third party isDeclarant\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isDeclarant)).to.eql(pm.variables.get(\"isDeclarant\"));",
							"});",
							"",
							"pm.test(\"Verify third party isLocked\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isLocked)).to.eql(pm.variables.get(\"isLocked\"));",
							"});",
							"",
							"/*fax*/",
							"",
							"pm.test(\"Verify third party fax indicative\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.indicative).to.eql(String(pm.variables.get(\"faxindicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party fax number\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.number).to.eql(String(pm.variables.get(\"faxnumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party fax extention\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.extention).to.eql(String(pm.variables.get(\"faxextention\")));",
							"});",
							"",
							"/*phone*/",
							"",
							"pm.test(\"Verify third party phone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].indicative).to.eql(String(pm.variables.get(\"phoneindicativeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party phone number\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].number).to.eql(String(pm.variables.get(\"phonenumberModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party phone extention\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].extention).to.eql(String(pm.variables.get(\"phoneextentionModified\")));",
							"});",
							"",
							"/*Contact*/",
							"",
							"pm.test(\"Verify third party contact firstName\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].firstName).to.eql(pm.variables.get(\"contactsfirstName\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact lastName\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].lastName).to.eql(pm.variables.get(\"contactslastName\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].indicative).to.eql(String(pm.variables.get(\"contactsofficePhoneIndicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone number\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].number).to.eql(String(pm.variables.get(\"contactsofficePhoneNumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone extention\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].extention).to.eql(String(pm.variables.get(\"contactsofficePhoneExtention\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].indicative).to.eql(String(pm.variables.get(\"contactscellPhoneIndicative\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone number\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].number).to.eql(String(pm.variables.get(\"contactscellPhoneNumber\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone extention\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].extention).to.eql(String(pm.variables.get(\"contactscellPhoneExtention\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact isPrincipal\", function () {",
							"    pm.expect(String(jsonData.accountDto.contacts[0].isPrincipal)).to.eql(pm.variables.get(\"contactsisPrincipal\"));",
							"});",
							"",
							"/*status*/",
							"pm.test(\"Verify third party status\", function () {",
							"    pm.expect(String(jsonData.accountDto.status.isActive)).to.eql(pm.variables.get(\"statusisActive\"));",
							"});",
							"",
							"/*principalLocation*/",
							"pm.test(\"Verify third party principal location\", function () {",
							"    pm.expect(jsonData.accountDto.principalLocation.email).to.eql(pm.variables.get(\"principalLocationemail\"));",
							"});",
							"",
							"/*segmentation*/",
							"",
							"pm.test(\"Verify third party segmentation account ratingCode\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.accountRatingCode).to.eql(pm.variables.get(\"segmentationaccountRatingCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation size code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.sizeCode).to.eql(pm.variables.get(\"segmentationsizeCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation sub economic sector code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.subEconomicSectorCode).to.eql(pm.variables.get(\"segmentationsubEconomicSectorCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation annual sale code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.annualSaleCode).to.eql(pm.variables.get(\"segmentationannualSaleCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation employee number code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.employeeNumberCode).to.eql(pm.variables.get(\"segmentationemployeeNumberCode\"));",
							"});",
							"",
							"",
							"/*relatedUsers*/",
							"",
							"pm.test(\"Verify third party related users directorId\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.directorId).to.eql(pm.variables.get(\"relatedUsersdirectorId\"));",
							"});",
							"",
							"pm.test(\"Verify third party related users salesmanId\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.salesmanId).to.eql(pm.variables.get(\"relatedUserssalesmanId\"));",
							"});",
							"",
							"pm.test(\"Verify third party related users distributorCode\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.distributorCode).to.eql(pm.variables.get(\"relatedUsersdistributorCode\"));",
							"});",
							"",
							"",
							"/*AccountDto*/",
							"",
							"pm.test(\"Verify third party collectorId\", function () {",
							"    pm.expect(jsonData.accountDto.collectorId).to.eql(pm.variables.get(\"collectorId\"));",
							"});",
							"",
							"pm.test(\"Verify third party comments\", function () {",
							"    pm.expect(jsonData.accountDto.comments).to.eql(pm.variables.get(\"comments\"));",
							"});",
							"",
							"pm.test(\"Verify third party postalCode\", function () {",
							"    pm.expect(jsonData.accountDto.postalCode).to.eql(String(pm.variables.get(\"postalCode\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountState\", function () {",
							"    pm.expect(jsonData.accountDto.accountState).to.eql(pm.variables.get(\"accountState\"));",
							"});",
							"",
							"pm.test(\"Verify third party foreignIdentification\", function () {",
							"    pm.expect(jsonData.accountDto.foreignIdentification).to.eql(String(pm.variables.get(\"foreignIdentification\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountTypes\", function () {",
							"    pm.expect(jsonData.accountDto.accountTypes).to.eql(String(pm.variables.get(\"accountTypes\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountSubStateCode\", function () {",
							"    pm.expect(String(jsonData.accountDto.accountSubStateCode)).to.eql(pm.variables.get(\"accountSubStateCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party erpContactCode\", function () {",
							"    pm.expect(String(jsonData.accountDto.erpContactCode)).to.eql(pm.variables.get(\"erpContactCode\"));",
							"});",
							"",
							"pm.test(\"Verify third party commercialActivity\", function () {",
							"    pm.expect(jsonData.accountDto.commercialActivity).to.eql(pm.variables.get(\"commercialActivity\"));",
							"});",
							"",
							"pm.test(\"Verify third party moneyCode\", function () {",
							"    pm.expect(jsonData.accountDto.moneyCode).to.eql(String(pm.variables.get(\"moneyCode\")));",
							"});",
							"",
							"pm.test(\"Verify third party eInvoiceReceiveType\", function () {",
							"    pm.expect(jsonData.accountDto.eInvoiceReceiveType).to.eql(pm.variables.get(\"eInvoiceReceiveType\"));",
							"});",
							"",
							"pm.test(\"Verify third party vatCompanyType\", function () {",
							"    pm.expect(jsonData.accountDto.vatCompanyType).to.eql(pm.variables.get(\"vatCompanyType\"));",
							"});",
							"",
							"pm.test(\"Verify third party acceptElectronicInvoice\", function () {",
							"    pm.expect(String(jsonData.accountDto.acceptElectronicInvoice)).to.eql(pm.variables.get(\"acceptElectronicInvoice\"));",
							"});",
							"",
							"pm.test(\"Verify third party billingOnlineState\", function () {",
							"    pm.expect(jsonData.accountDto.billingOnlineState).to.eql(pm.variables.get(\"billingOnlineState\"));",
							"});",
							"",
							"string_body = JSON.stringify(jsonData);",
							"pm.environment.set(\"findResponseBody\",string_body);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "text/plain"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:5000/api/third-party/account/{{guid}}",
					"host": [
						"{{url}}"
					],
					"port": "5000",
					"path": [
						"api",
						"third-party",
						"account",
						"{{guid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "06_update_all_fields",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "39ca0f79-0283-4a7d-b187-1d18de95002a",
						"exec": [
							"var responseBody = JSON.parse(pm.environment.get(\"findResponseBody\"));",
							"console.log(\"Update all fields\");",
							"",
							"/*Datos no obligatorios se actualizan. Esta sección se podrá remover con la implementación ",
							"de lectura CSV de las variables de entorno fijadas a continuación: */",
							"",
							"pm.environment.set(\"isCustomerModified\", false);",
							"pm.environment.set(\"isDealerModified\", false);",
							"pm.environment.set(\"isLeafletModified\", false);",
							"pm.environment.set(\"isSupplierModified\", false);",
							"pm.environment.set(\"isSocialReasonModified\", false);",
							"pm.environment.set(\"isBankModified\", true);",
							"pm.environment.set(\"idTypeCodeModified\", 74);",
							"pm.environment.set(\"checkDigitModified\", 2);",
							"pm.environment.set(\"branchOfficeModified\", 2);",
							"pm.environment.set(\"taxClassificationCodeModified\", 2526);",
							"pm.environment.set(\"companyNameModified\", \"Modified\");",
							"pm.environment.set(\"webSiteModified\", \"http://modificada\");",
							"pm.environment.set(\"accountParentCodeModified\", 450828);",
							"pm.environment.set(\"usersCodeModified\", 34343);",
							"pm.environment.set(\"taxPersonTypeCodeModified\", 1263);",
							"pm.environment.set(\"businessActivityCodeModified\", null);",
							"pm.environment.set(\"isAgentRetainerModified\", true);",
							"pm.environment.set(\"isAgentAutoretainerModified\", true);",
							"pm.environment.set(\"isDeclarantModified\", true);",
							"pm.environment.set(\"isLockedModified\", true);",
							"pm.environment.set(\"faxindicativeModified\", \"33\");",
							"pm.environment.set(\"faxnumberModified\", \"33\");",
							"pm.environment.set(\"faxextentionModified\", \"33\");",
							"pm.environment.set(\"statusisActiveModified\", false);",
							"pm.environment.set(\"principalLocationemailModified\", \"modified@mamil.com\");",
							"pm.environment.set(\"contactsfirstNameModified\", \"Modified\");",
							"pm.environment.set(\"contactslastNameModified\", \"Modified\");",
							"pm.environment.set(\"contactsofficePhoneIndicativeModified\", \"44\");",
							"pm.environment.set(\"contactsofficePhoneNumberModified\", \"44\");",
							"pm.environment.set(\"contactsofficePhoneExtentionModified\", \"44\");",
							"pm.environment.set(\"contactscellPhoneIndicativeModified\", \"44\");",
							"pm.environment.set(\"contactscellPhoneNumberModified\", \"44\");",
							"pm.environment.set(\"contactscellPhoneExtentionModified\", \"44\");",
							"pm.environment.set(\"contactsisPrincipalModified\", true);",
							"pm.environment.set(\"segmentationaccountRatingCodeModified\", 3788);",
							"pm.environment.set(\"segmentationsizeCodeModified\", 2535);",
							"pm.environment.set(\"segmentationsubEconomicSectorCodeModified\", 111057);",
							"pm.environment.set(\"segmentationannualSaleCodeModified\", 6312);",
							"pm.environment.set(\"segmentationemployeeNumberCodeModified\", 6313);",
							"pm.environment.set(\"relatedUsersdirectorIdModified\", 34381);",
							"pm.environment.set(\"relatedUserssalesmanIdModified\", 34382);",
							"pm.environment.set(\"relatedUsersdistributorCodeModified\", 450825);",
							"pm.environment.set(\"collectorIdModified\", 34156);",
							"pm.environment.set(\"commentsModified\", \"Modified\");",
							"pm.environment.set(\"accountStateModified\", 1264);",
							"pm.environment.set(\"accountSubStateCodeModified\", null);",
							"pm.environment.set(\"erpContactCodeModified\", 86343);",
							"pm.environment.set(\"vatCompanyTypeModified\", 2);",
							"pm.environment.set(\"eInvoiceReceiveTypeModified\", 2);",
							"pm.environment.set(\"postalCodeModified\", \"190004\");",
							"pm.environment.set(\"foreignIdentificationModified\", \"2\");",
							"pm.environment.set(\"accountTypesModified\", \"2\");",
							"pm.environment.set(\"moneyCodeModified\", \"2\");",
							"pm.environment.set(\"billingOnlineStateModified\", 2);",
							"pm.environment.set(\"acceptElectronicInvoiceModified\", false);",
							"pm.environment.set(\"commercialActivityModified\", 2);",
							"",
							"responseBody.accountDto.basicData.isCustomer = pm.environment.get(\"isCustomerModified\");",
							"responseBody.accountDto.basicData.isDealer = pm.environment.get(\"isDealerModified\");",
							"responseBody.accountDto.basicData.isLeaflet = pm.environment.get(\"isLeafletModified\");",
							"responseBody.accountDto.basicData.isSupplier = pm.environment.get(\"isSupplierModified\");",
							"responseBody.accountDto.basicData.isSocialReason = pm.environment.get(\"isSocialReasonModified\");",
							"responseBody.accountDto.basicData.isBank = pm.environment.get(\"isBankModified\");",
							"",
							"responseBody.accountDto.basicData.idTypeCode = pm.environment.get(\"idTypeCodeModified\");",
							"responseBody.accountDto.basicData.checkDigit = pm.environment.get(\"checkDigitModified\");",
							"responseBody.accountDto.basicData.branchOffice = pm.environment.get(\"branchOfficeModified\");",
							"responseBody.accountDto.basicData.taxClassificationCode = pm.environment.get(\"taxClassificationCodeModified\");",
							"responseBody.accountDto.basicData.companyName = pm.environment.get(\"companyNameModified\");",
							"responseBody.accountDto.basicData.webSite = pm.environment.get(\"webSiteModified\");",
							"responseBody.accountDto.basicData.accountParentCode = pm.environment.get(\"accountParentCodeModified\");",
							"responseBody.accountDto.basicData.usersCode = pm.environment.get(\"usersCodeModified\");",
							"responseBody.accountDto.basicData.taxPersonTypeCode = pm.environment.get(\"taxPersonTypeCodeModified\");",
							"responseBody.accountDto.basicData.businessActivityCode = pm.environment.get(\"businessActivityCodeModified\");",
							"responseBody.accountDto.basicData.isAgentRetainer = pm.environment.get(\"isAgentRetainerModified\");",
							"responseBody.accountDto.basicData.isAgentAutoretainer = pm.environment.get(\"isAgentAutoretainerModified\");",
							"responseBody.accountDto.basicData.isDeclarant = pm.environment.get(\"isDeclarantModified\");",
							"responseBody.accountDto.basicData.isLocked = pm.environment.get(\"isLockedModified\");",
							"",
							"responseBody.accountDto.basicData.fax.indicative = pm.environment.get(\"faxindicativeModified\");",
							"responseBody.accountDto.basicData.fax.number = pm.environment.get(\"faxnumberModified\");",
							"responseBody.accountDto.basicData.fax.extention = pm.environment.get(\"faxextentionModified\");",
							"",
							"responseBody.accountDto.status.isActive = pm.environment.get(\"statusisActiveModified\");",
							"",
							"responseBody.accountDto.principalLocation.email = pm.environment.get(\"principalLocationemailModified\");",
							"",
							"responseBody.accountDto.contacts[0].firstName = pm.environment.get(\"contactsfirstNameModified\");",
							"responseBody.accountDto.contacts[0].lastName = pm.environment.get(\"contactslastNameModified\");",
							"responseBody.accountDto.contacts[0].officePhone[0].indicative = pm.environment.get(\"contactsofficePhoneIndicativeModified\");",
							"responseBody.accountDto.contacts[0].officePhone[0].number = pm.environment.get(\"contactsofficePhoneNumberModified\");",
							"responseBody.accountDto.contacts[0].officePhone[0].extention = pm.environment.get(\"contactsofficePhoneExtentionModified\");",
							"",
							"responseBody.accountDto.contacts[0].cellPhone[0].indicative = pm.environment.get(\"contactscellPhoneIndicativeModified\");",
							"responseBody.accountDto.contacts[0].cellPhone[0].number = pm.environment.get(\"contactscellPhoneNumberModified\");",
							"responseBody.accountDto.contacts[0].cellPhone[0].extention = pm.environment.get(\"contactscellPhoneExtentionModified\");",
							"",
							"responseBody.accountDto.contacts[0].isPrincipal = pm.environment.get(\"contactsisPrincipalModified\");",
							"",
							"//Foreign Keys",
							"responseBody.accountDto.segmentation.accountRatingCode = parseInt(pm.environment.get(\"segmentationaccountRatingCodeModified\"));",
							"responseBody.accountDto.segmentation.sizeCode = parseInt(pm.environment.get(\"segmentationsizeCodeModified\"));",
							"responseBody.accountDto.segmentation.subEconomicSectorCode = parseInt(pm.environment.get(\"segmentationsubEconomicSectorCodeModified\"));",
							"responseBody.accountDto.segmentation.annualSaleCode = parseInt(pm.environment.get(\"segmentationannualSaleCodeModified\"));",
							"responseBody.accountDto.segmentation.employeeNumberCode = parseInt(pm.environment.get(\"segmentationemployeeNumberCodeModified\"));",
							"",
							"responseBody.accountDto.relatedUsers.directorId = pm.environment.get(\"relatedUsersdirectorIdModified\");",
							"responseBody.accountDto.relatedUsers.salesmanId = pm.environment.get(\"relatedUserssalesmanIdModified\");",
							"responseBody.accountDto.relatedUsers.distributorCode = pm.environment.get(\"relatedUsersdistributorCodeModified\");",
							"",
							"responseBody.accountDto.collectorId = pm.environment.get(\"collectorIdModified\");",
							"responseBody.accountDto.comments = pm.environment.get(\"commentsModified\");",
							"responseBody.accountDto.postalCode = pm.environment.get(\"postalCodeModified\");",
							"responseBody.accountDto.fiscalResponsibilityCode = \"{\\\"id\\\": 1, \\\"description\\\": \\\"Modified\\\"}\";",
							"responseBody.accountDto.accountState = pm.environment.get(\"accountStateModified\");",
							"responseBody.accountDto.foreignIdentification = pm.environment.get(\"foreignIdentificationModified\");",
							"responseBody.accountDto.accountTypes = pm.environment.get(\"accountTypesModified\");",
							"responseBody.accountDto.accountSubStateCode = pm.environment.get(\"accountSubStateCodeModified\");",
							"responseBody.accountDto.erpContactCode = pm.environment.get(\"erpContactCodeModified\");",
							"responseBody.accountDto.commercialActivity = parseInt(pm.environment.get(\"commercialActivityModified\"));",
							"responseBody.accountDto.moneyCode = pm.environment.get(\"moneyCodeModified\");",
							"responseBody.accountDto.eInvoiceReceiveType = pm.environment.get(\"eInvoiceReceiveTypeModified\");",
							"responseBody.accountDto.vatCompanyType = pm.environment.get(\"vatCompanyTypeModified\");",
							"responseBody.accountDto.acceptElectronicInvoice = pm.environment.get(\"acceptElectronicInvoiceModified\");",
							"responseBody.accountDto.billingOnlineState = pm.environment.get(\"billingOnlineStateModified\");",
							"",
							"pm.environment.set(\"findResponseBody\", JSON.stringify(responseBody));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "text/plain"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{findResponseBody}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:5000/api/third-party/account/",
					"host": [
						"{{url}}"
					],
					"port": "5000",
					"path": [
						"api",
						"third-party",
						"account",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "07_find_update_all_fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "407a8352-7721-49d1-b80b-5a5a9071bb59",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    console.log(\"Response time - Create Request: \"+pm.response.responseTime);",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"/*Mandatory fields*/",
							"",
							"pm.test(\"Verify third party first name\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.firstName).to.eql(pm.variables.get(\"firstNameModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party lastname\", function () {",
							"    console.log(jsonData.accountDto.basicData.lastName);",
							"    console.log(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.accountDto.basicData.lastName).to.eql(pm.variables.get(\"lastNameModified\"));",
							"});",
							"",
							"//pm.test(\"Verify third party fullname\", function () {",
							"//    let name = jsonData.accountDto.basicData.firstName;",
							"//    let lastname = jsonData.accountDto.basicData.lastName; ",
							"//    let fullName = name + \" \" + lastname;",
							"//    pm.expect(jsonData.accountDto.basicData.fullName).to.eql(fullName);",
							"//});",
							"",
							"pm.test(\"Verify third party identification\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.identification).to.eql(pm.variables.get(\"identificationModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party address\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.address).to.eql(pm.variables.get(\"addressModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party city\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.city).to.eql(pm.variables.get(\"cityModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact email\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].email).to.eql(pm.variables.get(\"contactsemailModified\"));",
							"});",
							"",
							"// Other fields",
							"",
							"pm.test(\"Verify third party isCustomer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isCustomer)).to.eql(String(pm.variables.get(\"isCustomerModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isDealer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isDealer)).to.eql(String(pm.variables.get(\"isDealerModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isLeaflet\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isLeaflet)).to.eql(String(pm.variables.get(\"isLeafletModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isSupplier\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isSupplier)).to.eql(String(pm.variables.get(\"isSupplierModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isSocialReason\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isSocialReason)).to.eql(String(pm.variables.get(\"isSocialReasonModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isBank\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isBank)).to.eql(String(pm.variables.get(\"isBankModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party taxClassificationCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.taxClassificationCode).to.eql(pm.variables.get(\"taxClassificationCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party check digit\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.checkDigit).to.eql(pm.variables.get(\"checkDigitModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party branchOffice\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.branchOffice).to.eql(pm.variables.get(\"branchOfficeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party companyName\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.companyName).to.eql(pm.variables.get(\"companyNameModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party webSite\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.webSite).to.eql(pm.variables.get(\"webSiteModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party accountParentCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.accountParentCode).to.eql(pm.variables.get(\"accountParentCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party usersCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.usersCode).to.eql(pm.variables.get(\"usersCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party taxPersonTypeCode\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.taxPersonTypeCode).to.eql(pm.variables.get(\"taxPersonTypeCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party businessActivityCode\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.businessActivityCode)).to.eql(String(pm.variables.get(\"businessActivityCodeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isAgentRetainer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isAgentRetainer)).to.eql(String(pm.variables.get(\"isAgentRetainerModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isAgentAutoretainer\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isAgentAutoretainer)).to.eql(String(pm.variables.get(\"isAgentAutoretainerModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isDeclarant\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isDeclarant)).to.eql(String(pm.variables.get(\"isDeclarantModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party isLocked\", function () {",
							"    pm.expect(String(jsonData.accountDto.basicData.isLocked)).to.eql(String(pm.variables.get(\"isLockedModified\")));",
							"});",
							"",
							"/*fax*/",
							"",
							"pm.test(\"Verify third party fax indicative\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.indicative).to.eql(String(pm.variables.get(\"faxindicativeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party fax number\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.number).to.eql(String(pm.variables.get(\"faxnumberModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party fax extention\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.fax.extention).to.eql(String(pm.variables.get(\"faxextentionModified\")));",
							"});",
							"",
							"/*phone*/",
							"",
							"pm.test(\"Verify third party phone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].indicative).to.eql(String(pm.variables.get(\"phoneindicativeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party phone number\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].number).to.eql(String(pm.variables.get(\"phonenumberModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party phone extention\", function () {",
							"    pm.expect(jsonData.accountDto.basicData.phone[0].extention).to.eql(String(pm.variables.get(\"phoneextentionModified\")));",
							"});",
							"",
							"/*Contact*/",
							"",
							"pm.test(\"Verify third party contact firstName\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].firstName).to.eql(pm.variables.get(\"contactsfirstNameModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact lastName\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].lastName).to.eql(pm.variables.get(\"contactslastNameModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].indicative).to.eql(String(pm.variables.get(\"contactsofficePhoneIndicativeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone number\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].number).to.eql(String(pm.variables.get(\"contactsofficePhoneNumberModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact officePhone extention\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].officePhone[0].extention).to.eql(String(pm.variables.get(\"contactsofficePhoneExtentionModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone indicative\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].indicative).to.eql(String(pm.variables.get(\"contactscellPhoneIndicativeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone number\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].number).to.eql(String(pm.variables.get(\"contactscellPhoneNumberModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact cellPhone extention\", function () {",
							"    pm.expect(jsonData.accountDto.contacts[0].cellPhone[0].extention).to.eql(String(pm.variables.get(\"contactscellPhoneExtentionModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party contact isPrincipal\", function () {",
							"    pm.expect(String(jsonData.accountDto.contacts[0].isPrincipal)).to.eql(String(pm.variables.get(\"contactsisPrincipalModified\")));",
							"});",
							"",
							"/*status*/",
							"pm.test(\"Verify third party status\", function () {",
							"    pm.expect(String(jsonData.accountDto.status.isActive)).to.eql(String(pm.variables.get(\"statusisActiveModified\")));",
							"});",
							"",
							"/*principalLocation*/",
							"pm.test(\"Verify third party principal location\", function () {",
							"    pm.expect(jsonData.accountDto.principalLocation.email).to.eql(pm.variables.get(\"principalLocationemailModified\"));",
							"});",
							"",
							"/*segmentation*/",
							"",
							"pm.test(\"Verify third party segmentation account ratingCode\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.accountRatingCode).to.eql(pm.variables.get(\"segmentationaccountRatingCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation size code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.sizeCode).to.eql(pm.variables.get(\"segmentationsizeCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation sub economic sector code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.subEconomicSectorCode).to.eql(pm.variables.get(\"segmentationsubEconomicSectorCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation annual sale code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.annualSaleCode).to.eql(pm.variables.get(\"segmentationannualSaleCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party segmentation employee number code\", function () {",
							"    pm.expect(jsonData.accountDto.segmentation.employeeNumberCode).to.eql(pm.variables.get(\"segmentationemployeeNumberCodeModified\"));",
							"});",
							"",
							"",
							"/*relatedUsers*/",
							"",
							"pm.test(\"Verify third party related users directorId\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.directorId).to.eql(pm.variables.get(\"relatedUsersdirectorIdModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party related users salesmanId\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.salesmanId).to.eql(pm.variables.get(\"relatedUserssalesmanIdModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party related users distributorCode\", function () {",
							"    pm.expect(jsonData.accountDto.relatedUsers.distributorCode).to.eql(pm.variables.get(\"relatedUsersdistributorCodeModified\"));",
							"});",
							"",
							"",
							"/*AccountDto*/",
							"",
							"pm.test(\"Verify third party collectorId\", function () {",
							"    pm.expect(jsonData.accountDto.collectorId).to.eql(pm.variables.get(\"collectorIdModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party comments\", function () {",
							"    pm.expect(jsonData.accountDto.comments).to.eql(pm.variables.get(\"commentsModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party postalCode\", function () {",
							"    pm.expect(jsonData.accountDto.postalCode).to.eql(String(pm.variables.get(\"postalCodeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountState\", function () {",
							"    pm.expect(jsonData.accountDto.accountState).to.eql(pm.variables.get(\"accountStateModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party foreignIdentification\", function () {",
							"    pm.expect(jsonData.accountDto.foreignIdentification).to.eql(String(pm.variables.get(\"foreignIdentificationModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountTypes\", function () {",
							"    pm.expect(jsonData.accountDto.accountTypes).to.eql(String(pm.variables.get(\"accountTypesModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party accountSubStateCode\", function () {",
							"    pm.expect(String(jsonData.accountDto.accountSubStateCode)).to.eql(String(pm.variables.get(\"accountSubStateCodeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party erpContactCode\", function () {",
							"    pm.expect(jsonData.accountDto.erpContactCode).to.eql(pm.variables.get(\"erpContactCodeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party commercialActivity\", function () {",
							"    pm.expect(jsonData.accountDto.commercialActivity).to.eql(pm.variables.get(\"commercialActivityModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party moneyCode\", function () {",
							"    pm.expect(jsonData.accountDto.moneyCode).to.eql(String(pm.variables.get(\"moneyCodeModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party eInvoiceReceiveType\", function () {",
							"    pm.expect(jsonData.accountDto.eInvoiceReceiveType).to.eql(pm.variables.get(\"eInvoiceReceiveTypeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party vatCompanyType\", function () {",
							"    pm.expect(jsonData.accountDto.vatCompanyType).to.eql(pm.variables.get(\"vatCompanyTypeModified\"));",
							"});",
							"",
							"pm.test(\"Verify third party acceptElectronicInvoice\", function () {",
							"    pm.expect(String(jsonData.accountDto.acceptElectronicInvoice)).to.eql(String(pm.variables.get(\"acceptElectronicInvoiceModified\")));",
							"});",
							"",
							"pm.test(\"Verify third party billingOnlineState\", function () {",
							"    pm.expect(jsonData.accountDto.billingOnlineState).to.eql(pm.variables.get(\"billingOnlineStateModified\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "text/plain"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:5000/api/third-party/account/{{guid}}",
					"host": [
						"{{url}}"
					],
					"port": "5000",
					"path": [
						"api",
						"third-party",
						"account",
						"{{guid}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}